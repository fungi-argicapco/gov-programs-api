{
  "openapi": "3.1.0",
  "info": {
    "title": "Government Programs API",
    "version": "1.0.0",
    "description": "Phase 1 public API for discovering government incentive programs."
  },
  "servers": [
    {
      "url": "https://api.example.com",
      "description": "Production (example placeholder)"
    }
  ],
  "paths": {
    "/v1/health": {
      "get": {
        "summary": "Service health check",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "Successful health response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/programs": {
      "get": {
        "summary": "List programs",
        "operationId": "listPrograms",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Full-text search query"
          },
          {
            "name": "country",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "US",
                "CA"
              ]
            }
          },
          {
            "name": "state_province",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "State or province code (e.g., WA)"
          },
          {
            "name": "industry[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "benefit_type[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "status[]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "updated_at",
                "-updated_at",
                "title",
                "-title"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "rank",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ltr"
              ]
            },
            "description": "Optional learning-to-rank strategy"
          },
          {
            "name": "rank_n",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Number of candidates to rerank before paging"
          }
        ],
        "responses": {
          "200": {
            "description": "Programs response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramListResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Caching directives for clients and intermediaries.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Entity tag representing the current response state.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not modified",
            "headers": {
              "Cache-Control": {
                "description": "Caching directives for clients and intermediaries.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Entity tag representing the cached response state.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/programs/{id}": {
      "get": {
        "summary": "Get a program by ID or UID",
        "operationId": "getProgram",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Program UID or numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Program detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramDetailResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Caching directives for clients and intermediaries.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Entity tag representing the current response state.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not modified",
            "headers": {
              "Cache-Control": {
                "description": "Caching directives for clients and intermediaries.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Entity tag representing the cached response state.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Program not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sources": {
      "get": {
        "summary": "List ingestion sources",
        "operationId": "listSources",
        "responses": {
          "200": {
            "description": "Sources response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourcesResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Caching directives for clients and intermediaries.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Entity tag representing the current response state.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not modified",
            "headers": {
              "Cache-Control": {
                "description": "Caching directives for clients and intermediaries.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Entity tag representing the cached response state.",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stats/coverage": {
      "get": {
        "summary": "Coverage statistics",
        "operationId": "getCoverageStats",
        "responses": {
          "200": {
            "description": "Coverage summary grouped by jurisdiction and benefit type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoverageResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Caching directives for clients and intermediaries.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Entity tag representing the current response state.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not modified",
            "headers": {
              "Cache-Control": {
                "description": "Caching directives for clients and intermediaries.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Entity tag representing the cached response state.",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ops/metrics": {
      "get": {
        "summary": "Request metrics",
        "operationId": "getOpsMetrics",
        "parameters": [
          {
            "name": "route",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter results by route"
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Start of the window (ISO timestamp or epoch milliseconds)"
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "End of the window (ISO timestamp or epoch milliseconds)"
          },
          {
            "name": "bucket",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "1h"
              ]
            },
            "description": "Aggregation bucket size"
          }
        ],
        "responses": {
          "200": {
            "description": "Aggregated request metrics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpsMetricsResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/ops/slo": {
      "get": {
        "summary": "Daily SLO windows",
        "operationId": "getOpsSlo",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "SLO window details and summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpsSloResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/ops/alerts": {
      "get": {
        "summary": "List open operational alerts",
        "operationId": "listOpsAlerts",
        "responses": {
          "200": {
            "description": "Collection of unresolved alerts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpsAlertsResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/ops/alerts/resolve": {
      "post": {
        "summary": "Resolve operational alerts",
        "operationId": "resolveOpsAlerts",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpsAlertsResolveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resolution outcome",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpsAlertsResolveResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/admin/api-keys": {
      "get": {
        "summary": "List API keys",
        "operationId": "listAdminApiKeys",
        "responses": {
          "200": {
            "description": "Collection of API keys without secrets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminApiKeysResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Create a new API key",
        "operationId": "createAdminApiKey",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminCreateApiKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created API key (raw secret is returned once)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminCreateApiKeyResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/admin/api-keys/{id}": {
      "patch": {
        "summary": "Update an API key",
        "operationId": "updateAdminApiKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUpdateApiKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminApiKey"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete an API key",
        "operationId": "deleteAdminApiKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletion outcome",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminDeleteApiKeyResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "details": {
                "type": [
                  "object",
                  "array",
                  "string",
                  "number",
                  "boolean",
                  "null"
                ]
              }
            },
            "required": [
              "code",
              "message",
              "details"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "error"
        ],
        "additionalProperties": false
      },
      "ProgramBenefitResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "min_amount_cents": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "max_amount_cents": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "currency_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "type",
          "min_amount_cents",
          "max_amount_cents",
          "currency_code",
          "notes"
        ],
        "additionalProperties": false
      },
      "ProgramCriterionResponse": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "kind",
          "operator",
          "value"
        ],
        "additionalProperties": false
      },
      "ProgramResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "uid": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "enum": [
              "US",
              "CA"
            ]
          },
          "authority_level": {
            "type": "string",
            "enum": [
              "federal",
              "state",
              "prov",
              "territory",
              "regional",
              "municipal"
            ]
          },
          "jurisdiction_code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "benefit_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ApiBenefitType"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/ApiProgramStatus"
          },
          "industry_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "source_id": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "type": "number"
          },
          "updated_at": {
            "type": "number"
          },
          "benefits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramBenefitResponse"
            }
          },
          "criteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramCriterionResponse"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "uid",
          "country_code",
          "authority_level",
          "jurisdiction_code",
          "title",
          "status",
          "industry_codes",
          "created_at",
          "updated_at",
          "benefits",
          "criteria",
          "tags"
        ],
        "additionalProperties": false
      },
      "ApiBenefitType": {
        "type": "string",
        "enum": [
          "grant",
          "rebate",
          "tax_credit",
          "loan",
          "guarantee",
          "voucher",
          "other"
        ]
      },
      "ApiProgramStatus": {
        "type": "string",
        "enum": [
          "open",
          "scheduled",
          "closed",
          "unknown"
        ]
      },
      "ProgramListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramResponse"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/ProgramListMeta"
          }
        },
        "required": [
          "data",
          "meta"
        ],
        "additionalProperties": false
      },
      "ProgramListMeta": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          },
          "ranking": {
            "$ref": "#/components/schemas/MetaRanking"
          }
        },
        "required": [
          "total",
          "page",
          "pageSize"
        ],
        "additionalProperties": false
      },
      "MetaRanking": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "ltr"
            ]
          },
          "window": {
            "type": "integer",
            "minimum": 1
          }
        },
        "required": [
          "mode",
          "window"
        ],
        "additionalProperties": false
      },
      "ProgramDetailResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "number"
          },
          "uid": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "enum": [
              "US",
              "CA"
            ]
          },
          "authority_level": {
            "type": "string",
            "enum": [
              "federal",
              "state",
              "prov",
              "territory",
              "regional",
              "municipal"
            ]
          },
          "jurisdiction_code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "benefit_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ApiBenefitType"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/ApiProgramStatus"
          },
          "industry_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "source_id": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "type": "number"
          },
          "updated_at": {
            "type": "number"
          },
          "benefits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramBenefitResponse"
            }
          },
          "criteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramCriterionResponse"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "authority_level",
          "benefits",
          "country_code",
          "created_at",
          "criteria",
          "id",
          "industry_codes",
          "jurisdiction_code",
          "status",
          "tags",
          "title",
          "uid",
          "updated_at"
        ]
      },
      "SourceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "license": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "tos_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "authority_level": {
            "type": "string"
          },
          "jurisdiction_code": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "url",
          "license",
          "tos_url",
          "authority_level",
          "jurisdiction_code"
        ],
        "additionalProperties": false
      },
      "SourcesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceResponse"
            }
          }
        },
        "required": [
          "data"
        ],
        "additionalProperties": false
      },
      "CoverageResponse": {
        "type": "object",
        "properties": {
          "byJurisdiction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverageByJurisdiction"
            }
          },
          "byBenefit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverageByBenefitType"
            }
          }
        },
        "required": [
          "byJurisdiction",
          "byBenefit"
        ],
        "additionalProperties": false
      },
      "CoverageByJurisdiction": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string"
          },
          "jurisdiction_code": {
            "type": "string"
          },
          "n": {
            "type": "number"
          }
        },
        "required": [
          "country_code",
          "jurisdiction_code",
          "n"
        ],
        "additionalProperties": false
      },
      "CoverageByBenefitType": {
        "type": "object",
        "properties": {
          "benefit_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ApiBenefitType"
              },
              {
                "type": "null"
              }
            ]
          },
          "n": {
            "type": "number"
          }
        },
        "required": [
          "benefit_type",
          "n"
        ],
        "additionalProperties": false
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "service": {
            "type": "string"
          }
        },
        "required": [
          "ok",
          "service"
        ],
        "additionalProperties": false
      },
      "OpsMetricPoint": {
        "type": "object",
        "properties": {
          "bucket_ts": {
            "type": "integer"
          },
          "route": {
            "type": "string"
          },
          "status_class": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          },
          "p50_ms": {
            "type": "number"
          },
          "p95_ms": {
            "type": "number"
          },
          "p99_ms": {
            "type": "number"
          },
          "bytes_out": {
            "type": "number"
          }
        },
        "required": [
          "bucket_ts",
          "route",
          "status_class",
          "count",
          "p50_ms",
          "p95_ms",
          "p99_ms",
          "bytes_out"
        ],
        "additionalProperties": false
      },
      "OpsMetricsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpsMetricPoint"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "date-time"
              },
              "to": {
                "type": "string",
                "format": "date-time"
              },
              "bucket": {
                "type": "string"
              }
            },
            "required": [
              "from",
              "to",
              "bucket"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data",
          "meta"
        ],
        "additionalProperties": false
      },
      "OpsSloRow": {
        "type": "object",
        "properties": {
          "day_utc": {
            "type": "string",
            "format": "date"
          },
          "route": {
            "type": "string"
          },
          "requests": {
            "type": "integer"
          },
          "err_rate": {
            "type": "number"
          },
          "p99_ms": {
            "type": "number"
          },
          "slo_ok": {
            "type": "boolean"
          },
          "budget_burn": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "day_utc",
          "route",
          "requests",
          "err_rate",
          "p99_ms",
          "slo_ok"
        ],
        "additionalProperties": false
      },
      "OpsSloSummaryRoute": {
        "type": "object",
        "properties": {
          "route": {
            "type": "string"
          },
          "requests": {
            "type": "integer"
          },
          "err_rate": {
            "type": "number"
          },
          "availability": {
            "type": "number"
          },
          "p99_ms": {
            "type": "number"
          }
        },
        "required": [
          "route",
          "requests",
          "err_rate",
          "availability",
          "p99_ms"
        ],
        "additionalProperties": false
      },
      "OpsSloSummary": {
        "type": "object",
        "properties": {
          "overall_availability": {
            "type": "number"
          },
          "overall_p99": {
            "type": "number"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpsSloSummaryRoute"
            }
          }
        },
        "required": [
          "overall_availability",
          "overall_p99",
          "routes"
        ],
        "additionalProperties": false
      },
      "OpsSloResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpsSloRow"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/OpsSloSummary"
          }
        },
        "required": [
          "data",
          "summary"
        ],
        "additionalProperties": false
      },
      "OpsAlert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "kind": {
            "type": "string"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "type": "integer"
          },
          "resolved_at": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "id",
          "kind",
          "created_at"
        ],
        "additionalProperties": false
      },
      "OpsAlertsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpsAlert"
            }
          }
        },
        "required": [
          "data"
        ],
        "additionalProperties": false
      },
      "OpsAlertsResolveRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "ids"
        ],
        "additionalProperties": false
      },
      "OpsAlertsResolveResponse": {
        "type": "object",
        "properties": {
          "resolved": {
            "type": "integer"
          }
        },
        "required": [
          "resolved"
        ],
        "additionalProperties": false
      },
      "AdminApiKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "partner",
              "read"
            ]
          },
          "quota_daily": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "quota_monthly": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "last_seen_at": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "id",
          "role"
        ],
        "additionalProperties": false
      },
      "AdminApiKeysResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminApiKey"
            }
          }
        },
        "required": [
          "data"
        ],
        "additionalProperties": false
      },
      "AdminCreateApiKeyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "partner",
              "read"
            ]
          },
          "quota_daily": {
            "type": [
              "number",
              "null"
            ]
          },
          "quota_monthly": {
            "type": [
              "number",
              "null"
            ]
          }
        },
        "additionalProperties": false
      },
      "AdminCreateApiKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "raw_key": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "raw_key"
        ],
        "additionalProperties": false
      },
      "AdminUpdateApiKeyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "partner",
              "read"
            ]
          },
          "quota_daily": {
            "type": [
              "number",
              "null"
            ]
          },
          "quota_monthly": {
            "type": [
              "number",
              "null"
            ]
          }
        },
        "additionalProperties": false
      },
      "AdminDeleteApiKeyResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        },
        "required": [
          "deleted"
        ],
        "additionalProperties": false
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Authentication required"
      },
      "Forbidden": {
        "description": "Access forbidden"
      },
      "NotFound": {
        "description": "Resource not found"
      }
    }
  }
}
